"""Add initial tables

Revision ID: 7d16a6c3cf7f
Revises: 
Create Date: 2023-10-02 01:32:35.581680

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7d16a6c3cf7f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gamemode',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_gamemode_id'), 'gamemode', ['id'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=False)
    op.create_table('temp_album',
    sa.Column('uuid', sa.String(length=128), nullable=False),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_temp_album_uuid'), 'temp_album', ['uuid'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('display_name', sa.String(length=256), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_display_name'), 'user', ['display_name'], unique=False)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('album',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source', sa.String(length=512), nullable=True),
    sa.Column('hash', sa.String(length=512), nullable=True),
    sa.Column('contributor_user_id', sa.String(length=128), nullable=True),
    sa.Column('pv_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('gamemode_id', sa.Integer(), nullable=True),
    sa.Column('played_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contributor_user_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['gamemode_id'], ['gamemode.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_album_hash'), 'album', ['hash'], unique=False)
    op.create_index(op.f('ix_album_id'), 'album', ['id'], unique=False)
    op.create_table('album_tag',
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['tag'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('album_id', 'tag')
    )
    op.create_table('bookmark',
    sa.Column('user_id', sa.String(length=128), nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'album_id')
    )
    op.create_table('page',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=True),
    sa.Column('index', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('player_name', sa.String(length=256), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_page_id'), 'page', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_page_id'), table_name='page')
    op.drop_table('page')
    op.drop_table('bookmark')
    op.drop_table('album_tag')
    op.drop_index(op.f('ix_album_id'), table_name='album')
    op.drop_index(op.f('ix_album_hash'), table_name='album')
    op.drop_table('album')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_display_name'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_temp_album_uuid'), table_name='temp_album')
    op.drop_table('temp_album')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_gamemode_id'), table_name='gamemode')
    op.drop_table('gamemode')
    # ### end Alembic commands ###
